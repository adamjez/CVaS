@model CVaS.Web.Models.LayoutViewModel

@section header {
    <environment names="Development">
        <link href="~/lib/fine-uploader/dist/fine-uploader-new.css" rel="stylesheet">

    </environment>
    <environment names="Staging,Production">
        <link href="~/lib/fine-uploader/dist/fine-uploader-new.min.css" rel="stylesheet">
    </environment>

    <script type="text/template" id="qq-template-gallery">
        <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Drop files here">
            <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
                <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
            </div>
            <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
                <span class="qq-upload-drop-area-text-selector"></span>
            </div>
            <div class="qq-upload-button-selector qq-upload-button">
                <div>Upload a file</div>
            </div>
            <span class="qq-drop-processing-selector qq-drop-processing">
                <span>Processing dropped files...</span>
                <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
            </span>
            <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals">
                <li>
                    <div class="row" style="margin-left:0px;margin-right:0px">
                        <div class="col-md-4">
                            <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>
                            <div class="qq-progress-bar-container-selector qq-progress-bar-container">
                                <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
                            </div>
                            <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                            <div class="qq-thumbnail-wrapper">
                                <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>
                            </div>
                            <button type="button" class="qq-upload-cancel-selector qq-upload-cancel">X</button>
                            <button type="button" class="qq-upload-retry-selector qq-upload-retry">
                                <span class="qq-btn qq-retry-icon" aria-label="Retry"></span>
                                Retry
                            </button>

                            <div class="qq-file-info">
                                <div class="qq-file-name">
                                    <span class="qq-upload-file-selector qq-upload-file"></span>
                                    <span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>
                                </div>
                                <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                                <span class="qq-upload-size-selector qq-upload-size"></span>
                                <button type="button" class="btn qq-upload-delete-selector qq-upload-delete">
                                    <span class="glyphicon glyphicon-remove" aria-label="Delete"></span>
                                </button>
                                <button type="button" class="btn qq-upload-pause-selector qq-upload-pause">
                                    <span class="glyphicon glyphicon-pause" aria-label="Pause"></span>
                                </button>
                                <button type="button" class="btn qq-upload-continue-selector qq-upload-continue">
                                    <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="loader" style="display:none"></div>
                            <p class="result"></p>
                        </div>
                    </div>
                </li>
            </ul>

            <dialog class="qq-alert-dialog-selector">
                <div class="qq-dialog-message-selector"></div>
                <div class="qq-dialog-buttons">
                    <button type="button" class="qq-cancel-button-selector">Close</button>
                </div>
            </dialog>

            <dialog class="qq-confirm-dialog-selector">
                <div class="qq-dialog-message-selector"></div>
                <div class="qq-dialog-buttons">
                    <button type="button" class="qq-cancel-button-selector">No</button>
                    <button type="button" class="qq-ok-button-selector">Yes</button>
                </div>
            </dialog>

            <dialog class="qq-prompt-dialog-selector">
                <div class="qq-dialog-message-selector"></div>
                <input type="text">
                <div class="qq-dialog-buttons">
                    <button type="button" class="qq-cancel-button-selector">Cancel</button>
                    <button type="button" class="qq-ok-button-selector">Ok</button>
                </div>
            </dialog>
        </div>
    </script>
}

<div id="message">
    <div style="padding: 5px;">
        <div id="request-message" class="alert alert-info alert-dismissible" style="display:none;" role="alert">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <div id="body-request-message">
            </div>

        </div>
    </div>
</div>


<h2>@Model.Title</h2>
<div class="row col-md-12">
    <dl>
        <dt>Description</dt>
        <dd>Algorithm for face detection in images by <a href="http://opencv.org/">opencv</a> with python.</dd>
    </dl>
</div>

<div class="row">
    <div class="col-md-8">
        <div id="fine-uploader-gallery"></div>
    </div>
</div>

@section Scripts {
    <environment names="Development">
        <script src="~/lib/fine-uploader/dist/jquery.fine-uploader.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/lib/fine-uploader/dist/jquery.fine-uploader.min.js"></script>
    </environment>

    <script>
        var showMessage = function (method, location, body) {
            $("#body-request-message").html("<p>" + method + " " + location + "</p><p>" + body + "</p>");
            $("#request-message").show();
            $("#request-message").alert();
            $("#request-message").delay(4000).slideUp(500, 0);
        };

        var showResult = function (result, element) {
            result = $.trim(result).length === 0 ? '&lt;empty output&gt;' : result;
            element.append(result);
        };

        var runAlgorithm = function (filename, id, qqId) {
            var result = $('li[qq-file-id=\'' + qqId + '\']');
            var loader = result.find('.loader');
            loader.show();

            var url = '/algorithms/face-detection';

            var requestBody = [ "local://" + id ];

            var jsonBody = JSON.stringify(requestBody);
            showMessage("POST", url, jsonBody);

            $.ajax({
                type: 'POST',
                url: url,
                data: jsonBody,
                timeout: 0,
                headers: {
                    "accept": "application/json"
                },
                contentType: 'application/json',
                success: function (data) {
                    loader.hide();
                    showResult(data.stdOut, result.find('p.result'));
                }
            });
        };

        $('#fine-uploader-gallery')
            .fineUploader({
                template: 'qq-template-gallery',
                request: {
                    endpoint: '/files'
                },
                deleteFile: {
                    enabled: false,
                    endpoint: '/files'
                },
                thumbnails: {
                    placeholders: {
                        waitingPath: '/lib/fine-uploader/dist/placeholders/waiting-generic.png',
                        notAvailablePath: '/lib/fine-uploader/dist/placeholders/not_available-generic.png'
                    }
                },
                validation: {
                    allowedExtensions: ['jpeg', 'jpg', 'gif', 'png']
                },
                callbacks: {
                    onComplete: function (qqId, name, responseJson) {
                        responseJson.ids.forEach(function (id) {
                            runAlgorithm(name, id, qqId);
                        });
                    }
                }
            });
    </script>
}
