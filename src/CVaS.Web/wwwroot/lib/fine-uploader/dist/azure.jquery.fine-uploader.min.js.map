{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/azure/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/azure/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/azure/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","fineUploaderAzure","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_onDeleteComplete","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","max","toFixed","sizeSymbols","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","expunge","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","errorMessage","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","azure","util","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","_getPrefixedParamName","getParamsAsHeaders","headerName","parseAzureError","codeTag","messageTag","domParser","DOMParser","responseDoc","parseFromString","errorTag","errorDetails","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","signature","blobProperties","minFileSize","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","getSas","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","maybePossible","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","handleSuccessResponse","parsedResponse","pendingRequests","responseJson","successIndicator","failureIndicator","codes","endpoints","promises","endpointHandler","Content-Type","createBlockId","partNum","digits","zeros","paddedPartNum","btoa","blockId","createRequestBody","doc","implementation","createDocument","latestEl","latestTextEl","createTextNode","XMLSerializer","serializeToString","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"azure.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in Azure mode,\n * you need to specify an `endpointType` with a value of \"azure\", and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to Azure as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderAzure = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate Azure-namespace modules.\n            optionsOrCommand.endpointType = \"azure\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.11.9\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n                this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n                // For error reporting, we only have access to the response status if this is not\n                // an `XDomainRequest`.\n                if (xhrOrXdr.withCredentials === undefined) {\n                    this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n                }\n                else {\n                    this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n                }\n            }\n            else {\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                }\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n                else {\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\n                        // upload chunk success\n                        function success(response, xhr) {\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                            handler.clearCachedChunk(id, chunkIdx);\n\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                responseToReport = upload.normalizeResponse(response, true),\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                            if (inProgressChunkIdx >= 0) {\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\n                            }\n\n                            handler._maybePersistChunkedState(id);\n\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                chunked.finalize(id);\n                            }\n                            else if (chunked.hasMoreParts(id)) {\n                                chunked.sendNext(id);\n                            }\n                            else {\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                            }\n                        },\n\n                        // upload chunk failure\n                        function failure(response, xhr) {\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\n                        }\n                        )\n                        .done(function() {\n                            handler.clearXhr(id, chunkIdx);\n                        });\n                }\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq */\nqq.azure = qq.azure || {};\nqq.azure.util = qq.azure.util || (function() {\n    \"use strict\";\n\n    return {\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\n\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\n         *\n         * @param name Name of the Request Header parameter.\n         * @returns {Boolean} Test result.\n         */\n        _paramNameMatchesAzureParameter: function(name) {\n            switch (name) {\n                case \"Cache-Control\":\n                case \"Content-Disposition\":\n                case \"Content-Encoding\":\n                case \"Content-MD5\":\n                case \"x-ms-blob-content-encoding\":\n                case \"x-ms-blob-content-disposition\":\n                case \"x-ms-blob-content-md5\":\n                case \"x-ms-blob-cache-control\":\n                    return true;\n                default:\n                    return false;\n            }\n        },\n\n        /** Create Prefixed request headers which are appropriate for Azure.\n         *\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\n         * passed along without a metadata prefix. For all other request header parameter names,\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\n         *\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\n         * @returns {String} A valid Request Header parameter name.\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                return name;\n            }\n            else {\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\n            }\n        },\n\n        getParamsAsHeaders: function(params) {\n            var headers = {};\n\n            qq.each(params, function(name, val) {\n                var headerName = qq.azure.util._getPrefixedParamName(name),\n                    value = null;\n\n                if (qq.isFunction(val)) {\n                    value = String(val());\n                }\n                else if (qq.isObject(val)) {\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\n                }\n                else {\n                    value = String(val);\n                }\n\n                if (value !== null) {\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                        headers[headerName] = value;\n                    } else {\n                        headers[headerName] = encodeURIComponent(value);\n                    }\n                }\n            });\n\n            return headers;\n        },\n\n        parseAzureError: function(responseText, log) {\n            var domParser = new DOMParser(),\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\n                errorDetails = {},\n                codeTag, messageTag;\n\n            log(\"Received error response: \" + responseText, \"error\");\n\n            if (errorTag) {\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\n                if (messageTag) {\n                    errorDetails.message = messageTag.textContent;\n                }\n\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\n                if (codeTag) {\n                    errorDetails.code = codeTag.textContent;\n                }\n\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\n\n                return errorDetails;\n            }\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploaderBasic = function(o) {\n        if (!qq.supportedFeatures.ajaxUploading) {\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\n        }\n\n        var options = {\n            signature: {\n                endpoint: null,\n\n                customHeaders: {}\n            },\n\n            // 'uuid', 'filename', or a function which may be promissory\n            blobProperties: {\n                name: \"uuid\"\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            chunking: {\n                // If this is increased, Azure may respond with a 413\n                partSize: 4000000,\n                // Don't chunk files less than this size\n                minFileSize: 4000001\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds blob names for file representations constructed from a session request.\n        this._cannedBlobNames = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\n        getBlobName: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedBlobNames[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n            return this._cannedBlobNames[id];\n        },\n\n        _getEndpointSpecificParams: function(id) {\n            return {\n                blob: this.getBlobName(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                container: this._endpointStore.get(id)\n            };\n        },\n\n        _createUploadHandler: function() {\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\n                {\n                    signature: this._options.signature,\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\n                },\n                \"azure\");\n        },\n\n        _determineBlobName: function(id) {\n            var self = this,\n                blobNameOptionValue = this._options.blobProperties.name,\n                uuid = this.getUuid(id),\n                filename = this.getName(id),\n                fileExtension = qq.getExtension(filename),\n                blobNameToUse = uuid;\n\n            if (qq.isString(blobNameOptionValue)) {\n                switch (blobNameOptionValue) {\n                    case \"uuid\":\n                        if (fileExtension !== undefined) {\n                            blobNameToUse += \".\" + fileExtension;\n                        }\n                        return new qq.Promise().success(blobNameToUse);\n                    case \"filename\":\n                        return new qq.Promise().success(filename);\n                    default:\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\n                }\n            }\n            else {\n                return blobNameOptionValue.call(this, id);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.blobName == null) {\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedBlobNames[id] = sessionData.blobName;\n            }\n\n            return id;\n        },\n\n        _deleteBlob: function(relatedToCancel, id) {\n            var self = this,\n                deleteBlobSasUri = {},\n                blobUriStore = {\n                    get: function(id) {\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\n                    }\n                },\n                deleteFileEndpointStore = {\n                    get: function(id) {\n                        return deleteBlobSasUri[id];\n                    }\n                },\n                getSasSuccess = function(id, sasUri) {\n                    deleteBlobSasUri[id] = sasUri;\n                    deleteBlob.send(id);\n                },\n                getSasFailure = function(id, reason, xhr) {\n                    if (relatedToCancel) {\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                    }\n                    else {\n                        self._onDeleteComplete(id, xhr, true);\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\n                    }\n                },\n                deleteBlob = new qq.azure.DeleteBlob({\n                    endpointStore: deleteFileEndpointStore,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        delete deleteBlobSasUri[id];\n\n                        if (isError) {\n                            if (relatedToCancel) {\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\n                            }\n                            else {\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\n                            }\n                        }\n\n                        if (relatedToCancel) {\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\n                        }\n                        else {\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                        }\n                    }\n                }),\n                getSas = new qq.azure.GetSas({\n                    cors: this._options.cors,\n                    customHeaders: this._options.signature.customHeaders,\n                    endpointStore: {\n                        get: function() {\n                            return self._options.signature.endpoint;\n                        }\n                    },\n                    restRequestVerb: deleteBlob.method,\n                    log: qq.bind(self.log, self)\n                });\n\n            getSas.request(id, blobUriStore.get(id)).then(\n                qq.bind(getSasSuccess, self, id),\n                qq.bind(getSasFailure, self, id));\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return {\n                sendDelete: function(id, uuid) {\n                    self._deleteBlob(false, id);\n                }\n            };\n        }\n    });\n}());\n","/*globals qq */\n/**\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\n * associated Azure API.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\n// TODO l18n for error messages returned to UI\nqq.azure.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        log = proxy.log,\n        cors = spec.cors,\n        endpointStore = spec.endpointStore,\n        paramsStore = spec.paramsStore,\n        signature = spec.signature,\n        filenameParam = spec.filenameParam,\n        minFileSizeForChunking = spec.chunking.minFileSize,\n        deleteBlob = spec.deleteBlob,\n        onGetBlobName = spec.onGetBlobName,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n\n        getBlobMetadata = function(id) {\n            var params = paramsStore.get(id);\n            params[filenameParam] = getName(id);\n            return params;\n        },\n\n        api = {\n            putBlob: new qq.azure.PutBlob({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            putBlock: new qq.azure.PutBlock({\n                log: log\n            }),\n\n            putBlockList: new qq.azure.PutBlockList({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\n                cors: cors,\n                customHeaders: signature.customHeaders,\n                endpointStore: {\n                    get: function() {\n                        return signature.endpoint;\n                    }\n                },\n                log: log,\n                restRequestVerb: \"PUT\"\n            })\n        };\n\n    function combineChunks(id) {\n        var promise = new qq.Promise();\n\n        getSignedUrl(id).then(function(sasUri) {\n            var mimeType = handler._getMimeType(id),\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\n\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\n                handler._registerXhr(id, null, xhr, api.putBlockList);\n            })\n                .then(function(xhr) {\n                    log(\"Success combining chunks for id \" + id);\n                    promise.success({}, xhr);\n                }, function(xhr) {\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\n                    handleFailure(xhr, promise);\n                });\n\n        },\n        promise.failure);\n\n        return promise;\n    }\n\n    function determineBlobUrl(id) {\n        var containerUrl = endpointStore.get(id),\n            promise = new qq.Promise(),\n            getBlobNameSuccess = function(blobName) {\n                handler._setThirdPartyFileId(id, blobName);\n                promise.success(containerUrl + \"/\" + blobName);\n            },\n            getBlobNameFailure = function(reason) {\n                promise.failure(reason);\n            };\n\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\n\n        return promise;\n    }\n\n    function getSignedUrl(id, optChunkIdx) {\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\n\n            promise = new qq.Promise(),\n            getSasSuccess = function(sasUri) {\n                log(\"GET SAS request succeeded.\");\n                promise.success(sasUri);\n            },\n            getSasFailure = function(reason, getSasXhr) {\n                log(\"GET SAS request failed: \" + reason, \"error\");\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\n            },\n            determineBlobUrlSuccess = function(blobUrl) {\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\n                    getSasSuccess,\n                    getSasFailure\n                );\n            },\n            determineBlobUrlFailure = function(reason) {\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\n                promise.failure({error: reason});\n            };\n\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\n\n        return promise;\n    }\n\n    function handleFailure(xhr, promise) {\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\n            errorMsg = \"Problem sending file to Azure\";\n\n        promise.failure({error: errorMsg,\n            azureError: azureError && azureError.message,\n            reset: xhr.status === 403\n        });\n    }\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx) {\n            var promise = new qq.Promise();\n\n            getSignedUrl(id, chunkIdx).then(\n                function(sasUri) {\n                    var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx);\n\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\n\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\n                        function(blockIdEntry) {\n                            if (!handler._getPersistableData(id).blockIdEntries) {\n                                handler._getPersistableData(id).blockIdEntries = [];\n                            }\n\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\n                            log(\"Put Block call succeeded for \" + id);\n                            promise.success({}, xhr);\n                        },\n                        function() {\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\n                            handleFailure(xhr, promise);\n                        }\n                    );\n                },\n                promise.failure\n            );\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var promise = new qq.Promise(),\n                fileOrBlob = handler.getFile(id);\n\n            getSignedUrl(id).then(function(sasUri) {\n                var xhr = handler._createXhr(id);\n\n                handler._registerProgressHandler(id);\n\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\n                    function() {\n                        log(\"Put Blob call succeeded for \" + id);\n                        promise.success({}, xhr);\n                    },\n                    function() {\n                        log(\"Put Blob call failed for \" + id, \"error\");\n                        handleFailure(xhr, promise);\n                    }\n                );\n            },\n            promise.failure);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this,\n        new qq.XhrUploadHandler({\n            options: qq.extend({namespace: \"azure\"}, spec),\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n        }\n    ));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var relatedToCancel = handler._wasCanceled(id),\n                    chunkingData = handler._getPersistableData(id),\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\n\n                if (relatedToCancel && blockIdEntries.length > 0) {\n                    deleteBlob(id);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return combineChunks(id);\n            },\n\n            _shouldChunkThisFile: function(id) {\n                var maybePossible = super_._shouldChunkThisFile(id);\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\n            }\n        };\n    });\n};\n","/* globals qq */\n/**\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\n * make a specific request on a Blob via the Azure REST API.\n */\nqq.azure.GetSas = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            customHeaders: {},\n            restRequestVerb: \"PUT\",\n            endpointStore: null,\n            log: function(str, level) {}\n        },\n        requestPromises = {};\n\n    qq.extend(options, o);\n\n    function sasResponseReceived(id, xhr, isError) {\n        var promise = requestPromises[id];\n\n        if (isError) {\n            promise.failure(\"Received response code \" + xhr.status, xhr);\n        }\n        else {\n            if (xhr.responseText.length) {\n                promise.success(xhr.responseText);\n            }\n            else {\n                promise.failure(\"Empty response.\", xhr);\n            }\n        }\n\n        delete requestPromises[id];\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        successfulResponseCodes: {\n            GET: [200]\n        },\n        contentType: null,\n        customHeaders: options.customHeaders,\n        endpointStore: options.endpointStore,\n        cors: options.cors,\n        log: options.log,\n        onComplete: sasResponseReceived\n    }));\n\n    qq.extend(this, {\n        request: function(id, blobUri) {\n            var requestPromise = new qq.Promise(),\n                restVerb = options.restRequestVerb;\n\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\n\n            requestPromises[id] = requestPromise;\n\n            requester.initTransport(id)\n                .withParams({\n                    bloburi: blobUri,\n                    _method: restVerb\n                })\n                .withCacheBuster()\n                .send();\n\n            return requestPromise;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\n */\nqq.azure.DeleteBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"DELETE\",\n        options = {\n            endpointStore: {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhr, isError) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [202];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: options.endpointStore,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete\n    }));\n\n    qq.extend(this, {\n        method: method,\n        send: function(id) {\n            options.log(\"Submitting Delete Blob request for \" + id);\n\n            return requester.initTransport(id)\n                .send();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\n */\nqq.azure.PutBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id),\n                headers = qq.azure.util.getParamsAsHeaders(params);\n\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\n\n            return headers;\n        },\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success();\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, url, file) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting Put Blob request for \" + id);\n\n            promises[id] = promise;\n            endpoints[id] = url;\n\n            requester.initTransport(id)\n                .withPayload(file)\n                .withHeaders({\"Content-Type\": file.type})\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\n */\nqq.azure.PutBlock = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        blockIdEntries = {},\n        promises = {},\n        options = {\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id],\n                blockIdEntry = blockIdEntries[id];\n\n            delete endpoints[id];\n            delete promises[id];\n            delete blockIdEntries[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success(blockIdEntry);\n            }\n        }\n    }));\n\n    function createBlockId(partNum) {\n        var digits = 5,\n            zeros = new Array(digits + 1).join(\"0\"),\n            paddedPartNum = (zeros + partNum).slice(-digits);\n\n        return btoa(paddedPartNum);\n    }\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, sasUri, partNum, blob) {\n            var promise = new qq.Promise(),\n                blockId = createBlockId(partNum);\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\n\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\n            blockIdEntries[id] = {part: partNum, id: blockId};\n\n            requester.initTransport(id)\n                .withPayload(blob)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\n */\nqq.azure.PutBlockList = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        promises = {},\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id);\n\n            return qq.azure.util.getParamsAsHeaders(params);\n        },\n        contentType: \"text/plain\",\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: function() {},\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n\n        }\n    }));\n\n    function createRequestBody(blockIdEntries) {\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\n\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\n        blockIdEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\n            var latestEl = doc.createElement(\"Latest\"),\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\n\n            latestEl.appendChild(latestTextEl);\n            qq(doc).children()[0].appendChild(latestEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    qq.extend(this, {\n        method: method,\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\n            var promise = new qq.Promise(),\n                blockIdsXml = createRequestBody(blockIdEntries),\n                xhr;\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\n\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\n\n            xhr = requester.initTransport(id)\n                .withPayload(blockIdsXml)\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\n                .send();\n            registerXhrCallback(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\n * This module inherits all logic from UI & core mode and adds some UI-related logic\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\n * in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"azure\");\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploader.prototype, {\n    });\n}());\n"]}